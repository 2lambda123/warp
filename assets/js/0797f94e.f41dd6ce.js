"use strict";(self.webpackChunkwarp_docs=self.webpackChunkwarp_docs||[]).push([[940],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,k=m["".concat(p,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(k,l(l({ref:t},s),{},{components:n})):r.createElement(k,l({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9496:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>s,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={title:"Setuping development environment"},l=void 0,i={unversionedId:"contribution_guidelines/setuping-development-environment",id:"contribution_guidelines/setuping-development-environment",title:"Setuping development environment",description:"Development environment may be setup manually or via docker-compose.",source:"@site/docs/contribution_guidelines/setuping-development-environment.mdx",sourceDirName:"contribution_guidelines",slug:"/contribution_guidelines/setuping-development-environment",permalink:"/warp/docs/contribution_guidelines/setuping-development-environment",editUrl:"https://github.com/NethermindEth/warp/tree/develop/docs/docs/contribution_guidelines/setuping-development-environment.mdx",tags:[],version:"current",frontMatter:{title:"Setuping development environment"},sidebar:"tutorialSidebar",previous:{title:"Implementation & testing",permalink:"/warp/docs/contribution_guidelines/implementation-and-testing"},next:{title:"Get around unsupported features.",permalink:"/warp/docs/get_around_unsupported_features"}},p=[{value:"Docker",id:"docker",children:[],level:2},{value:"Manually",id:"manually",children:[],level:2}],c={toc:p};function s(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Development environment may be setup manually or via docker-compose."),(0,a.kt)("h2",{id:"docker"},"Docker"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note:"),"\nExecuting Warp using Docker works only for x86 architecture. If you're using ARM architecture (such as Apple's M1) you can find warp installation instructions ",(0,a.kt)("a",{parentName:"p",href:"https://nethermindeth.github.io/warp/docs/getting_started/a-usage-and-installation"},"here"),".")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Clone repository and ",(0,a.kt)("inlineCode",{parentName:"li"},"cd warp/")),(0,a.kt)("li",{parentName:"ol"},"Build docker containers:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"docker-compose up\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Install javascript dependencies :")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"docker-compose exec warp yarn\n")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Compile the project:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"docker-compose exec warp yarn build\n")),(0,a.kt)("ol",{start:5},(0,a.kt)("li",{parentName:"ol"},"Build warplib:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"docker-compose exec warp yarn warplib\n")),(0,a.kt)("ol",{start:6},(0,a.kt)("li",{parentName:"ol"},"Test the installation worked by transpiling an example ERC20 contract:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"bin/warp transpile exampleContracts/ERC20.sol\n")),(0,a.kt)("h2",{id:"manually"},"Manually"),(0,a.kt)("p",null,"First, please make sure you have all the required external ",(0,a.kt)("a",{parentName:"p",href:"https://nethermindeth.github.io/warp/docs/getting_started/a-usage-and-installation#dependencies"},"dependencies")," installed."),(0,a.kt)("p",null,"Then, with a Python3.9 virtual environment activated, perform the following instructions:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Clone this repo and change directory into the ",(0,a.kt)("inlineCode",{parentName:"p"},"warp")," folder.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Install the JavaScript dependencies:"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"yarn\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Install the Python dependencies:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pip install -r requirements.txt\n")),(0,a.kt)("p",null,"If you are using a M1 chipped Mac and getting a ",(0,a.kt)("inlineCode",{parentName:"p"},"'gmp.h' file not found")," error when installing Cairo run the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"CFLAGS=-I`brew --prefix gmp`/include LDFLAGS=-L`brew --prefix gmp`/lib pip install ecdsa fastecdsa sympy\n")),(0,a.kt)("p",null,"Then run the pip command above again."),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Compile the project:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"yarn build\n")),(0,a.kt)("ol",{start:5},(0,a.kt)("li",{parentName:"ol"},"Compile Warp libraries")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"yarn warplib\n")),(0,a.kt)("ol",{start:6},(0,a.kt)("li",{parentName:"ol"},"Test the installation worked by transpiling an example ERC20 contract:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"bin/warp transpile exampleContracts/ERC20.sol\n")))}s.isMDXComponent=!0}}]);