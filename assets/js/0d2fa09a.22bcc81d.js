"use strict";(self.webpackChunkwarp_docs=self.webpackChunkwarp_docs||[]).push([[699],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),s=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,h=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return n?a.createElement(h,l(l({ref:t},c),{},{components:n})):a.createElement(h,l({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=u;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var s=2;s<o;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3488:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>p,toc:()=>i});var a=n(7462),r=(n(7294),n(3905));const o={title:"Warp Command Line Interface"},l=void 0,p={unversionedId:"getting_started/cli",id:"getting_started/cli",title:"Warp Command Line Interface",description:"Useful commands with the Warp Transpiler.",source:"@site/docs/getting_started/cli.mdx",sourceDirName:"getting_started",slug:"/getting_started/cli",permalink:"/warp/docs/getting_started/cli",editUrl:"https://github.com/NethermindEth/warp/tree/develop/docs/docs/getting_started/cli.mdx",tags:[],version:"current",frontMatter:{title:"Warp Command Line Interface"},sidebar:"tutorialSidebar",previous:{title:"Installation and Usage",permalink:"/warp/docs/getting_started/a-usage-and-installation"},next:{title:"Inputs and Outputs",permalink:"/warp/docs/getting_started/inputs-and-outputs"}},i=[{value:"Deploys an account contract to a network",id:"deploys-an-account-contract-to-a-network",children:[],level:3},{value:"Get transaction status:",id:"get-transaction-status",children:[],level:3}],s={toc:i};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Useful commands with the Warp Transpiler."),(0,r.kt)("p",null,"To query available commands, run ",(0,r.kt)("inlineCode",{parentName:"p"},"warp --help"),"."),(0,r.kt)("p",null,"Available Commands:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"traspile                    Transpile Solidity Code into Cairo\ntransform                   Transforms Solidity Code into Warp Format(?)\ntest                        Transpile and starknet-compile test on example_contracts and checks feature supports\nanalyse                     Breaksdown and analyses a Solidity contract\nstatus                      Returns the transaction status\ncompile                     Compiles a Cairo contract with StarkNet\ndelcare                     Declares a Cairo contract on a StarkNet Network and returns the class hash\ndeploy                      Compiles and deploys a Cairo contract\ndeploy_account              Deploys an account contract\ninvoke                      Sends a transaction to the StarkNet sequencer\ncall                        Calls a StarkNet contract without affecting the state\ninstall                     Installs python dependencies\nversion                     Gets the current version\nhelp                        Display for help command\n")),(0,r.kt)("p",null,"Command Options:"),(0,r.kt)("p",null,"transpile ",(0,r.kt)("inlineCode",{parentName:"p"},"[options]")," ",(0,r.kt)("inlineCode",{parentName:"p"},"<file...>"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'---compile-cairo\n--no-compile-errors\n--check-trees\n--highlight <ids...>\n--order <passOrder>\n-o, --output-dir <path>         (default: "warp_output")\n--print-trees\n--no-result\n--no-stubs\n--no-strict\n--until <pass>\n--no-warnings\n--dev\n-h, --help                      display help for command\n')),(0,r.kt)("p",null,"transform ",(0,r.kt)("inlineCode",{parentName:"p"},"[options]")," ",(0,r.kt)("inlineCode",{parentName:"p"},"<file...>"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"--no-compile-errors\n--check-trees\n--highlight <ids...>\n--order <passOrder>\n-o, --output-dir <path>\n--print-trees\n--no-result\n--no-stubs\n--no-strict\n--until <pass>\n--no-warnings\n-h, --help                      display help for command\n")),(0,r.kt)("p",null,"test ",(0,r.kt)("inlineCode",{parentName:"p"},"[options]"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"-f --force\n-r --results\n-u --unsafe\n-e --exact\n-h, --help                      display help for command\n")),(0,r.kt)("p",null,"analyse ",(0,r.kt)("inlineCode",{parentName:"p"},"[options]")," ",(0,r.kt)("inlineCode",{parentName:"p"},"<file...>"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"--highlight <ids...>\n-h, --help                      display help for command\n")),(0,r.kt)("p",null,"status ",(0,r.kt)("inlineCode",{parentName:"p"},"[options]")," ",(0,r.kt)("inlineCode",{parentName:"p"},"<tx_hash...>"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"--network <network>             Starknet network URL.\n-h, --help                      display help for command\n")),(0,r.kt)("p",null,"compile ",(0,r.kt)("inlineCode",{parentName:"p"},"[options]")," ",(0,r.kt)("inlineCode",{parentName:"p"},"<file...>"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"-d, --debug_info                Include debug information. (default: false)\n-h, --help                      display help for command\n")),(0,r.kt)("p",null,"declare ",(0,r.kt)("inlineCode",{parentName:"p"},"[options]")," ",(0,r.kt)("inlineCode",{parentName:"p"},"<cairo_contract>"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'--network                       StarkNet network URL. (default: "alpha-goerli")\n-h, --help                      display help for command\n')),(0,r.kt)("p",null,"deploy ",(0,r.kt)("inlineCode",{parentName:"p"},"[options]")," ",(0,r.kt)("inlineCode",{parentName:"p"},"<file...>"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"-d, --debug_info                Compile include debug information. (default: false)\n--inputs <inputs...>            Arguments to be passed to constructor of the program as a comma seperated list of strings, ints and lists.\n--use_cairo_abi                 Use the cairo abi instead of solidity for the inputs. (default: false)\n--network <network>             Starknet network URL\n--no_wallet                     Do not use a wallet for deployment. (default: false)\n--wallet <wallet>               Wallet provider to use\n--account <account>             Account to use for deployment\n-h, --help                      display help for command\n")),(0,r.kt)("p",null,"deploy_account ",(0,r.kt)("inlineCode",{parentName:"p"},"[options]"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"--account <account>             The name of the account. If not given, the default for the wallet will be used.\n--network <network>             Starknet network URL.\n--wallet <wallet>               The name of the wallet, including the python module and wallet class.\n-h, --help                      display help for command\n")),(0,r.kt)("p",null,"invoke ",(0,r.kt)("inlineCode",{parentName:"p"},"[options]")," ",(0,r.kt)("inlineCode",{parentName:"p"},"<file...>"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"--address <address>             Address of contract to invoke.\n--function <function>           Function to invoke.\n--inputs <inputs...>            Input to function as a comma separated string, use square brackets to represent lists and structs. Numbers can be represented in decimal and hex.\n--use_cairo_abi                 Use the cairo abi instead of solidity for the inputs. (default: false)\n--account <account>             The name of the account. If not given, the default for the wallet will be used.\n--network <network>             Starknet network URL.\n--wallet <wallet>               The name of the wallet, including the python module and wallet class.\n-h, --help                      display help for command\n")),(0,r.kt)("p",null,"call ",(0,r.kt)("inlineCode",{parentName:"p"},"[options]")," ",(0,r.kt)("inlineCode",{parentName:"p"},"<file...>"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"--address <address>             Address of contract to call.\n--function <function>           Function to call.\n--inputs <inputs...>            Input to function as a comma separated string, use square brackets to represent lists and structs. Numbers can be represented in decimal and hex.\n--use_cairo_abi                 Use the cairo abi instead of solidity for the inputs. (default: false)\n--account <account>             The name of the account. If not given, the default for the wallet will be used.\n--network <network>             Starknet network URL.\n--wallet <wallet>               The name of the wallet, including the python module and wallet class.\n-h, --help                      display help for command\n")),(0,r.kt)("p",null,"install ",(0,r.kt)("inlineCode",{parentName:"p"},"[options]"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'--python <python>  Path to python3.7 executable. (default: "python3.7")\n-v, --verbose\n-h, --help                      display help for command\n')),(0,r.kt)("p",null,"Global flags:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"-h, --help                      display help for command\n")),(0,r.kt)("h1",{id:"example-calls"},"Example calls:"),(0,r.kt)("h3",{id:"deploys-an-account-contract-to-a-network"},"Deploys an account contract to a network"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"warp deploy_account --wallet=starkware.starknet.wallets.open_zeppelin.OpenZeppelinAccount --account=demo --network=alpha-goerli\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Output:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"#Sent deploy account contract transaction.\n\nNOTE: This is a modified version of the OpenZeppelin account contract. The signature is computed\ndifferently.\n\nContract address: 0x0\nPublic key: 0x1\nTransaction hash: 0x2\n")),(0,r.kt)("h3",{id:"get-transaction-status"},"Get transaction status:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"warp status 0x4 --network=alpha-goerli\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Output:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n    "block_hash": "0x5",\n    "tx_status": "ACCEPTED_ON_L2"\n}\n')))}c.isMDXComponent=!0}}]);