"use strict";(self.webpackChunkwarp_docs=self.webpackChunkwarp_docs||[]).push([[457],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=s(n),m=l,h=u["".concat(p,".").concat(m)]||u[m]||c[m]||r;return n?a.createElement(h,o(o({ref:t},d),{},{components:n})):a.createElement(h,o({ref:t},d))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var s=2;s<r;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7403:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var a=n(7462),l=(n(7294),n(3905));const r={title:"Installation and Usage"},o=void 0,i={unversionedId:"getting_started/a-usage-and-installation",id:"getting_started/a-usage-and-installation",title:"Installation and Usage",description:"Installation",source:"@site/docs/getting_started/a-usage-and-installation.mdx",sourceDirName:"getting_started",slug:"/getting_started/a-usage-and-installation",permalink:"/warp/docs/getting_started/a-usage-and-installation",editUrl:"https://github.com/NethermindEth/warp/tree/develop/docs/docs/getting_started/a-usage-and-installation.mdx",tags:[],version:"current",frontMatter:{title:"Installation and Usage"},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/warp/docs/category/getting-started"},next:{title:"Warp Command Line Interface",permalink:"/warp/docs/getting_started/cli"}},p=[{value:"Installation",id:"installation",children:[{value:"Dependencies",id:"dependencies",children:[],level:3},{value:"Installation",id:"installation-1",children:[],level:3}],level:2}],s={toc:p};function d(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"installation"},"Installation"),(0,l.kt)("h3",{id:"dependencies"},"Dependencies"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"You will need ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Z3Prover/z3"},"z3")," and ",(0,l.kt)("a",{parentName:"li",href:"https://gmplib.org/#DOWNLOAD"},"gmp"),"\ninstalled to use Warp.")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Install command on macOS:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"brew install z3 gmp\n")),(0,l.kt)("p",null,"If you're on an arm based Apple machine (m1/m2 mac) you'll need to install ",(0,l.kt)("inlineCode",{parentName:"p"},"gmp")," and export some\nenvironment variables"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"export CFLAGS=-I`brew --prefix gmp`/include\nexport LDFLAGS=-L`brew --prefix gmp`/lib\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Install command on Ubuntu:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install libz3-dev libgmp3-dev\n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"Install Python3.9 with dev dependencies (",(0,l.kt)("inlineCode",{parentName:"li"},"python3.9 python3.9-venv python3.9-dev"),") into your base env.\nIf you do not have the dev dependencies installed the installation will fail.")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Install commands on MacOS:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"brew install python@3.9\n")),(0,l.kt)("p",null,"With python3.9 already installed you have venv covered:"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"If you are using Python 3.3 or newer (...) venv is included in the Python standard library and requires no additional installation.")),(0,l.kt)("p",null,"Then you can install dev package using pip:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pip install python-dev-tools\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Install commands on Ubuntu:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install python3.9 python3.9-venv python3.9-dev\n")),(0,l.kt)("p",null,"Or you can just install python3.9 and then install python-dev-tools using pip."),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"Install Python3.9 with dev dependencies (",(0,l.kt)("inlineCode",{parentName:"li"},"python3.9 python3.9-venv python3.9-dev"),") into your base env.\nIf you do not have the dev dependencies installed the installation will fail.")),(0,l.kt)("h3",{id:"installation-1"},"Installation"),(0,l.kt)("p",null,"The first step is to make sure you have all required external ",(0,l.kt)("a",{parentName:"p",href:"#dependencies"},"dependencies")," installed."),(0,l.kt)("p",null,"Then perform the following instructions in order:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Add the warp package from npm.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"yarn global add @nethermindeth/warp\n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"Ensure the package was added by checking the version number:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"warp version\n")),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},"Install the dependencies:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"warp install --verbose\n")),(0,l.kt)("p",null,"Use the ",(0,l.kt)("inlineCode",{parentName:"p"},"--python")," flag to pass the path to ",(0,l.kt)("inlineCode",{parentName:"p"},"python3.9")," binary, if the above command complains."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"warp install --python <path/to/python3.9> --verbose\n")),(0,l.kt)("ol",{start:4},(0,l.kt)("li",{parentName:"ol"},"Test the installation worked by transpiling an example ERC20 contract:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"warp transpile <contract-path>\n")))}d.isMDXComponent=!0}}]);